{"version":3,"file":"static/js/884.a1a6e417.chunk.js","mappings":"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","sources":["api/cosntants.js","api/featchTmdbApi.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx"],"sourcesContent":["export const API_KEY = 'fea301b61f4120262087afffe243e7c9';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DetailsSection = styled.section`\n  /* display: flex; */\n  display: block;\n  /* padding: 20px; */\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Wraper = styled.div`\n  display: flex;\n\n  margin-bottom: 20px;\n`;\n\nexport const Info = styled.div`\n  padding-left: 20px;\n  padding-top: 10px;\n`;\n\nexport const Name = styled.h2`\n  color: lightgrey;\n  font-weight: 500;\n  font-size: 25px;\n  margin: 0;\n  margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n  color: lightgrey;\n  font-weight: 400;\n  font-size: 14px;\n\n  margin-bottom: 20px;\n  width: 700px;\n  line-height: 1.3;\n`;\n\nexport const Text = styled.h3`\n  color: lightgrey;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: lightgrey;\n  font-weight: 400;\n  font-size: 14px;\n  padding-left: 12px;\n`;\n\nexport const GenresItem = styled.li`\n  &:not(:last-child) {\n    /* margin-bottom: 5px; */\n  }\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  margin-top: 15px;\n`;\n\nexport const LinkItem = styled.li`\n  margin-left: 12px;\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const LinkMovie = styled(NavLink)`\n  padding: 5px 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: gray;\n  font-weight: 500;\n  &.active {\n    color: lightgray;\n    box-shadow: 0 0 5px 3px rgba(11, 127, 171, 0.7);\n  }\n`;\n\nexport const BtnGoBack = styled(Link)`\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: gray;\n  font-weight: 500;\n  box-shadow: 0 0 5px 3px rgba(11, 127, 171, 0.7);\n  margin-bottom: 25px;\n  width: 70px;\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    color: lightgray;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\n\nimport {\n  DetailsSection,\n  Info,\n  Name,\n  Description,\n  Text,\n  Genres,\n  GenresItem,\n  LinkList,\n  LinkItem,\n  LinkMovie,\n  Wraper,\n  BtnGoBack,\n} from './MovieItem.styled';\n\nexport const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n  // const backLinkHref = location.state?.from ?? '/movies';\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { title, release_date, overview, genres, vote_average, poster_path } = movie;\n\n  return (\n    <DetailsSection>\n      <BtnGoBack to={backLinkHref}>Go back</BtnGoBack>\n      <Wraper >\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n            width=\"250px\"\n            height=\"375px\"\n          />\n        \n        <Info>\n          <Name>\n            {release_date ? `${title} (${new Date(release_date).getFullYear()})` : title}\n          </Name>\n          <Description>\n            {vote_average\n              ? `User Score: ${Math.round(vote_average) * 10}% `\n              : 'User Score: no score'}\n          </Description>\n          <Text>Overview:</Text>\n          <Description>\n            {overview\n              ? overview\n              : 'No overview'}\n          </Description>\n          <Text>Genres:</Text>\n          <Genres>\n            {genres.length !== 0\n              ? genres.map(el => (\n                <GenresItem key={el.id}>{el.name}</GenresItem>\n                ))\n              : \"No genres\"\n            }\n          </Genres>\n        </Info>\n      </Wraper>\n\n      <Text>Additional information</Text>\n      \n      <LinkList>\n          <LinkItem>\n            <LinkMovie to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </LinkMovie>\n          </LinkItem>\n          <li>\n            <LinkMovie to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </LinkMovie>\n          </li>\n      </LinkList>\n      \n    </DetailsSection>\n  );\n};\n\nexport default MovieItem;\n\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n};","import { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { getMovieInfo } from 'api/featchTmdbApi';\n\nimport MovieItem from 'components/MovieItem/MovieItem';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isError, setIsError] = useState('');\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const dataMovie = await getMovieInfo(movieId);\n        setMovie(dataMovie);\n      } catch (error) {\n        // console.log(error.message);\n        setIsError('No movies')\n        \n        navigate('/', { replace: true });\n      }\n    };\n\n    fetch();\n  }, [movieId, navigate]);\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <>\n      {movie.length !== 0\n        ? <MovieItem movie={movie} />\n        : <div style={{\n            color: \"lightgrey\",\n            fontWeight: \"400\",\n            fontSize: \"14px\",\n            paddingLeft: \"40px\",\n            paddingTop:\"20px\"\n        }}>{isError}</div>}\n      \n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","res","data","console","log","getMovieInfo","movieId","getMovieReviews","getMovieCast","getMoviesByQuery","query","DetailsSection","styled","Wraper","Info","Name","Description","Text","Genres","GenresItem","LinkList","LinkItem","LinkMovie","NavLink","BtnGoBack","Link","defaultImg","movie","backLinkHref","useLocation","state","from","title","release_date","overview","genres","vote_average","poster_path","to","src","alt","width","height","Date","getFullYear","Math","round","length","map","el","name","id","useState","setMovie","isError","setIsError","useParams","navigate","useNavigate","useEffect","fetch","dataMovie","replace","style","color","fontWeight","fontSize","paddingLeft","paddingTop","Suspense","fallback"],"sourceRoot":""}