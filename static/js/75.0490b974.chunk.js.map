{"version":3,"file":"static/js/75.0490b974.chunk.js","mappings":"kTAAaA,EAAU,mCACVC,EAAW,+BCEjB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEeC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHzC,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,oBACwBT,IAHvC,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,4BACgCT,IAH/C,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,4BACgCT,IAH/C,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEeV,EAAAA,EAAAA,IAAA,UACbF,EADa,+BACkBY,EADlB,oBACmCb,IAHlD,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gF,4KC7CMO,EAAOC,EAAAA,GAAAA,KAAH,+EAOJC,EAAQD,EAAAA,GAAAA,MAAH,+ZAqBLE,EAASF,EAAAA,GAAAA,OAAH,4U,SCXnB,EAhBkB,SAAC,GAA4C,IAA1CG,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxC,OACE,UAACN,EAAD,CAAMO,SAAUH,EAAhB,WACE,SAACF,EAAD,CACAM,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,eACZN,MAAOA,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAAcO,EAAMC,OAAOT,MAA/B,KAEf,SAACF,EAAD,CAAQK,KAAK,SAAb,SAAsB,aAG3B,E,UCdYO,EAAOd,EAAAA,GAAAA,GAAH,8HAQJe,EAAOf,EAAAA,GAAAA,GAAH,6GAQJgB,GAAWhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,gICErB,EAhBkB,SAAC,GAAgB,IAAdkB,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,SAACC,EAAD,CAAUO,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAA5C,SACGG,EAAMK,SAFAL,EAAME,GADF,KAStB,E,oBC2ED,EApFe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmB7B,EAAnB,KACMP,EAAK,UAAG+B,EAAaM,IAAI,gBAApB,QAAgC,GAC3C,GAAwBJ,EAAAA,EAAAA,WAAS,GAAjC,eAAOK,EAAP,KAAaC,EAAb,MAECC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAK,mCAAG,yFACE,KAAVzC,EADQ,wDAIZuC,GAAQ,GAJI,mBAMexC,EAAAA,EAAAA,IAAiBC,GANhC,OAMJ0C,EANI,OAUY,KAFhBtB,EAASsB,EAAWC,SAEfC,QACTC,EAAAA,GAAAA,MAAA,2CAAgD7C,EAAhD,gBAGFmC,EAAgBf,GAChBb,EAAc,IAfJ,kDAiBVd,QAAQC,IAAR,MAjBU,yBAmBV6C,GAAQ,GAnBE,6EAAH,qDAuBXE,GACD,GAAE,CAACzC,IAeJ,OACE,iCACE,gCACE,4BACE,SAAC,EAAD,CACEK,aAlBW,SAAAS,GAGnB,GAFAA,EAAMgC,iBAEoB,KAAtBV,EAAWW,OAAf,CAIA,IAAMC,EAAkBlC,EAAMC,OAAOkC,SAASjD,MAAMM,MAAM4C,cAE1DlB,EADwC,KAAfI,EAAoB,CAAEpC,MAAOgD,GAAoB,CAAC,EAF1E,MAFCH,EAAAA,GAAAA,MAAY,2BAOf,EAQSvC,MAAO8B,EACP7B,cAAeA,KAEjB,SAAC,EAAD,CAAWa,OAAQc,OAEpBI,IACC,SAAC,KAAD,CACEa,YAAY,oBACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,QAIf,SAAC,KAAD,CACEC,SAAS,YACTC,cAAc,EACdC,aAAc,CACZC,MAAO,CACLC,WAAY,oBACZC,MAAO,aAMlB,C","sources":["api/cosntants.js","api/featchTmdbApi.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["export const API_KEY = 'fea301b61f4120262087afffe243e7c9';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n\n  margin-top: 25px;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 1.15;\n  margin: 0;\n\n  line-height: 1.3;\n  color: lightgray;\n  /* background-color: rgb(10 130 170 / 30%); */\n  background-color: gray;\n  width: 300px;\n  height: 30px;\n  margin-right: 10px;\n\n  border-radius: 4px;\n  padding: 4px;\n  /* border-color: lightgray; */\n  border-color: gray;\n  outline: 1px solid lightgray;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  background-color: #444;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  color: gray;\n  font-weight: 500;\n  box-shadow: 0 0 5px 3px rgba(11, 127, 171, 0.7);\n  cursor: pointer;\n\n  &:hover {\n    color: lightgray;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchBar.styled'; \n\nconst SearchBar = ({ handleSubmit, value, setInputValue }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input \n      type=\"text\"\n      name=\"query\"\n      autoComplete=\"off\"\n      placeholder=\"Search movie\"\n      value={value}\n      onChange={event => setInputValue(event.target.value)}        \n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n\n\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  setInputValue: PropTypes.func.isRequired,\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 20px;\n  padding-left: 12px;\n`;\n\nexport const Item = styled.li`\n  color: lightgrey;\n  /* \n  &:not(:last-child) {\n    margin-bottom: 5px;\n  } */\n`;\n\nexport const FilmLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    color: gray;\n    font-weight: 500;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink } from './MovieList.styled';\n\n \nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <FilmLink to={`${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n  )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport  SearchBar  from \"components/SearchBar/SearchBar\";\nimport  MovieList  from \"components/MovieList/MovieList\";\n\nimport { getMoviesByQuery } from \"api/featchTmdbApi\";\nimport { RotatingLines } from \"react-loader-spinner\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const query = searchParams.get('query') ?? '';\n  const [load, setLoad] = useState(false);\n\n   useEffect(() => {\n    const fetch = async () => {\n      if (query === '') {\n        return;\n      }\n      setLoad(true);\n      try {\n        const dataMovies = await getMoviesByQuery(query);\n\n        const movies = dataMovies.results;\n\n        if (movies.length === 0) {\n          toast.error(`Sorry, the movies you requested: ${query} not found.`);\n        }\n\n        setMoviesSearch(movies);\n        setInputValue('');\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoad(false);\n      }\n    };\n\n    fetch();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.error('Fill in the search field');\n      return;\n    }\n    const normalizedValue = event.target.elements.query.value.toLowerCase();\n    const nextSearchParams = inputValue !== '' ? { query: normalizedValue } : {};\n    setSearchParams(nextSearchParams);\n\n  };\n\n  return (\n    <>\n      <section>\n        <div>\n          <SearchBar\n            handleSubmit={handleSubmit}\n            value={inputValue}\n            setInputValue={setInputValue}\n          />\n          <MovieList movies={moviesSearch} />\n        </div>\n        {load && (\n          <RotatingLines\n            strokeColor=\"rgb(11, 127, 171)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        )}\n      </section>\n      <Toaster\n        position=\"top-right\"\n        reverseOrder={false}\n        toastOptions={{\n          style: {\n            background: 'rgb(11, 127, 171)',\n            color: '#fff',\n          },\n        }}\n      />\n    </>\n  )\n}\n\n\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","res","data","console","log","getMovieInfo","movieId","getMovieReviews","getMovieCast","getMoviesByQuery","query","Form","styled","Input","Button","handleSubmit","value","setInputValue","onSubmit","type","name","autoComplete","placeholder","onChange","event","target","List","Item","FilmLink","Link","movies","location","useLocation","map","movie","to","id","state","from","title","useSearchParams","searchParams","setSearchParams","useState","moviesSearch","setMoviesSearch","inputValue","get","load","setLoad","useEffect","fetch","dataMovies","results","length","toast","preventDefault","trim","normalizedValue","elements","toLowerCase","strokeColor","strokeWidth","animationDuration","width","visible","position","reverseOrder","toastOptions","style","background","color"],"sourceRoot":""}