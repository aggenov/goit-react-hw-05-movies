{"version":3,"file":"static/js/415.5b4bf2a8.chunk.js","mappings":"mTAAaA,EAAU,mCACVC,EAAW,+BCEjB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEeC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHzC,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,oBACwBT,IAHvC,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,4BACgCT,IAH/C,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEeN,EAAAA,EAAAA,IAAA,UACbF,EADa,kBACKQ,EADL,4BACgCT,IAH/C,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEeV,EAAAA,EAAAA,IAAA,UACbF,EADa,+BACkBY,EADlB,oBACmCb,IAHlD,cAEGI,EAFH,yBAKIA,EAAIC,MALR,gCAOHC,QAAQC,IAAR,MAPG,gF,0GCnCMO,GATOC,EAAAA,GAAAA,GAAH,oJASGA,EAAAA,GAAAA,GAAH,+HAQJC,EAAOD,EAAAA,GAAAA,GAAH,6GAQJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gI,SCErB,EAvBkB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OAEE,oBAASC,MAAO,CAAEC,cAAe,QAAjC,SAEGJ,EAAOK,OAAS,IAChB,SAACV,EAAD,UACAK,EAAOM,KAAI,SAAAC,GAAK,aACf,SAACV,EAAD,WACG,SAACC,EAAD,CAAUU,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAApD,mBACQM,EAAMK,sBADd,QACgCL,EAAMM,QAF9BN,EAAME,GADF,OAYtB,C,0HCyCD,UA5Da,WAEX,OAAwCK,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6FACZJ,GAAQ,GADI,mBAGenC,EAAAA,EAAAA,MAHf,OAGJwC,EAHI,OAKJvB,EAASuB,EAAWC,QAAQlB,KAAI,kBAA6B,CACjEG,GADoC,EAAGA,GAEvCG,eAFoC,EAAOA,eAAP,IAKtCI,EAAgBhB,GAVN,gDAYVoB,EAAW,8BAZD,yBAcVF,GAAQ,GAdE,4EAAH,qDAkBXI,GACD,GAAE,KAID,iCAEE,eAAInB,MAAO,CACTsB,MAAO,YACPC,WAAY,MACZC,UAAW,OACXC,aAAc,OACdC,YAAa,QALf,SAMG,mBAEFV,EACG,CAACA,QAAAA,IACD,SAAC,IAAD,CAAWnB,OAAQe,IAGtB,IAEAE,IACC,SAAC,KAAD,CACEa,YAAY,oBACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,MAKlB,C","sources":["api/cosntants.js","api/featchTmdbApi.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["export const API_KEY = 'fea301b61f4120262087afffe243e7c9';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieInfo(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Text = styled.h1`\n  margin: 0;\n  color: lightgrey;\n  padding-left: 12px;\n  font-weight: 700;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 20px;\n  padding-left: 12px;\n`;\n\nexport const Item = styled.li`\n  color: lightgrey;\n  /* \n  &:not(:last-child) {\n    margin-bottom: 5px;\n  } */\n`;\n\nexport const FilmLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n  &:hover {\n    color: gray;\n    font-weight: 500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { List, Item, FilmLink } from './MovieList.styled';\n\n \nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n\n    <section style={{ paddingBottom: \"40px\" }}>\n      \n      {movies.length > 0 && (\n       <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n           <FilmLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.original_title ?? movie.name}\n          </FilmLink>\n        </Item>\n      ))}\n    </List>\n      )}\n    </section>\n \n  )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};","import { useState, useEffect } from \"react\";\n\nimport { getTrendingMovies } from \"api/featchTmdbApi\";\n\nimport { RotatingLines } from \"react-loader-spinner\";\n\nimport MovieList from \"components/MovieList/MovieList\";\n\n\nconst Home = () => {\n\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoad(true);\n      try {\n        const dataMovies = await getTrendingMovies();\n\n        const movies = dataMovies.results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n\n        setMoviesSearch(movies);\n      } catch (error) {\n        setIsError('Oops...Somesing went wrong');\n      } finally {\n        setLoad(false);\n      }\n    };\n    \n    fetch();\n  }, []);\n \n  \n  return (\n    <>\n\n      <h1 style={{\n        color: 'lightgrey',\n        fontWeight: '700',\n        marginTop: '24px',\n        marginBottom: '24px',\n        paddingLeft: '12px',\n      }}>Trending today</h1>\n\n      {isError\n        ? {isError}\n        : <MovieList movies={moviesSearch} />\n      }\n\n      {' '}\n      \n      {load && (\n        <RotatingLines\n          strokeColor=\"rgb(11, 127, 171)\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Home;"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","res","data","console","log","getMovieInfo","movieId","getMovieReviews","getMovieCast","getMoviesByQuery","query","List","styled","Item","FilmLink","Link","movies","location","useLocation","style","paddingBottom","length","map","movie","to","id","state","from","original_title","name","useState","moviesSearch","setMoviesSearch","load","setLoad","isError","setIsError","useEffect","fetch","dataMovies","results","color","fontWeight","marginTop","marginBottom","paddingLeft","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}